require 'rails_helper'

RSpec.describe AnswersController, type: :controller do
let(:valid_attributes) { { query: 'MyString'} }

  let(:valid_session) { {} }

  let(:user) { build(:user) }

before do
database = Database.create!(:id=>1, :name=>"Baza danych", :comment=>"d",:adapter=>"postgresql", :host=>"localhost", :username=>"postgres", :password=>"tarnawski", :database=>"test")
test = Test.create!(:id=>1, :name=>"Test", :available=>0, :database=>1)	
question = Question.create!(:id=>1, :test_id =>1, :content => "Wypisz wszstkie ceny", :query => "Select * from ceny")
question2 = Question.create!(:id=>2, :test_id =>1, :content => "Wypisz wszstkie ceny", :query => "Select * from ceny")

end
   

  before do
    sign_in user
    controller.stub(:user_signed_in?).and_return(true)
    controller.stub(:current_user).and_return(user)
    controller.stub(:authenticate_user!).and_return(user)
  end

  context 'user is not an admin' do
    before do
      controller.current_user.stub(admin?: false)
    end






describe 'GET new' do
      it 'redirects user to the login page' do
        session[:tab]=[1]
        get :new, {}, valid_session
        expect(response).to redirect_to(tests_path)
      end
    end

describe 'GET edit' do
      it 'redirects user to the login page' do
        session[:tab]=[1]
	answer = Answer.create!(:id=>1, :student_id=>1, :question_id=>1, :answer=>"Wypisz ceny")
        get :edit, { id: answer.to_param }, valid_session
        expect(response).to redirect_to(tests_path)
      end
    end
   describe 'PUT update' do
      it 'redirect user to the login page' do
        session[:tab]=[1]
answer = Answer.create!(:id=>1, :student_id=>1, :question_id=>1, :answer=>"select * from ceny")
        put :update, {:id => answer.to_param, :answer => { 'name' => 'MyString'}}, valid_session
        expect(response).to redirect_to(tests_path)
      end
    end
 describe 'GET show' do
      it 'exposes the requested test' do
        session[:tab]=[1]
	answer = Answer.create!(:id=>1, :student_id=>1, :question_id=>1, :answer=>"select * from ceny")
        get :show, { id: answer.to_param }, valid_session
        expect(controller.answer).to eq(answer)
      end
    end


end

  context 'user is an admin' do
    before do
      controller.current_user.stub(admin?: true)
    end
    it 'should increment the count by 2' do
        session[:tab]=[1,2]
          expect {
            post :prepare
          }.to change(Answer, :count).by(2)
        end
   end

 describe 'GET show' do
      it 'exposes the requested test' do
        Test.create!(:id=>2, :name=>"Test2", :available=>1, :database=>1)	
        Question.create!(:id=>5, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "Select * from ceny")
	answer = Answer.create!(:id=>1, :student_id=>user.id, :question_id=>5, :answer=>"select")
        session[:tab]=[5]
        get :show, { id: answer.to_param }, valid_session
          expect(response).to render_template('answers/show')
      end
    end

 describe 'GET show' do
      it 'exposes the requested test' do
        Test.create!(:id=>2, :name=>"Test2", :available=>1, :database=>1)	
        Question.create!(:id=>5, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "Select * from ceny")
	answer = Answer.create!(:id=>1, :student_id=>user.id, :question_id=>5, :answer=>"rollback")
        session[:tab]=[5]
        get :show, { id: answer.to_param }, valid_session
        expect(response).to redirect_to(tests_path)
      end
    end

 describe 'GET show' do
      it 'exposes the requested test' do
        Test.create!(:id=>2, :name=>"Test2", :available=>1, :database=>1)	
        Question.create!(:id=>5, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "Select * from ceny")
	answer = Answer.create!(:id=>1, :student_id=>user.id, :question_id=>5, :answer=>"ROLLBACK")
        session[:tab]=[5]
        get :show, { id: answer.to_param }, valid_session
        expect(response).to redirect_to(tests_path)
      end
    end

 describe 'GET show' do
      it 'exposes the requested test' do
        Test.create!(:id=>2, :name=>"Test2", :available=>1, :database=>1)	
        Question.create!(:id=>5, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "Select * from ceny")
	answer = Answer.create!(:id=>1, :student_id=>user.id, :question_id=>5, :answer=>"commit")
        session[:tab]=[5]
        get :show, { id: answer.to_param }, valid_session
        expect(response).to redirect_to(tests_path)
      end
    end
 describe 'GET show' do
      it 'exposes the requested test' do
        Test.create!(:id=>2, :name=>"Test2", :available=>1, :database=>1)	
        Question.create!(:id=>5, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "Select * from ceny")
	answer = Answer.create!(:id=>1, :student_id=>user.id, :question_id=>5, :answer=>"select count(*) from ceny")
        session[:tab]=[5]
        get :show, { id: answer.to_param }, valid_session
	assigns(:zmienna).rows.should eq([["9"]])
      end
    end

 describe 'GET show' do
      it 'exposes the requested test' do
        Test.create!(:id=>2, :name=>"Test2", :available=>1, :database=>1)	
        Question.create!(:id=>5, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "Select * from ceny")
	answer = Answer.create!(:id=>1, :student_id=>user.id, :question_id=>5, :answer=>"select nazwa from klienci LIMIT 1")
        session[:tab]=[5]
        get :show, { id: answer.to_param }, valid_session
	assigns(:zmienna).rows.should eq([["JOCKSPORTS"]])
      end
    end

describe 'GET index' do
      it 'redirects user to the result page (index)' do
        session[:tab]=[5]
        Test.create!(:id=>2, :name=>"Test2", :available=>1, :database=>1)	
        Question.create!(:id=>5, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "Select * from ceny")
	Answer.create!(:id=>1, :student_id=>user.id, :question_id=>5, :answer=>"select nazwa from klienci LIMIT 1")
        get :index, valid_session
        expect(response).to render_template('index')
      end
    end

describe 'GET index' do
      it 'student should got 0 points' do
        session[:tab]=[5]
        Test.create!(:id=>2, :name=>"Test2", :available=>1, :database=>1)	
        Question.create!(:id=>5, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "Select * from ceny")
	Answer.create!(:id=>1, :student_id=>user.id, :question_id=>5, :answer=>"select nazwa from klienci LIMIT 1")
        get :index, valid_session
        assigns(:points).should eq(0)
      end
    end

describe 'GET index' do
      it 'student should got 1 points' do
        session[:tab]=[5]
        Test.create!(:id=>2, :name=>"Test2", :available=>1, :database=>1)	
        Question.create!(:id=>5, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "select nazwa from klienci LIMIT 1")
	Answer.create!(:id=>1, :student_id=>user.id, :question_id=>5, :answer=>"select nazwa from klienci LIMIT 1")
        get :index, valid_session
        assigns(:points).should eq(1)
      end
    end

describe 'GET index' do
      it 'student should got 2 points' do
        session[:tab]=[5,6]
        Test.create!(:id=>2, :name=>"Test2", :available=>1, :database=>1)	
        Question.create!(:id=>5, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "select nazwa from klienci LIMIT 1")
	Answer.create!(:id=>1, :student_id=>user.id, :question_id=>5, :answer=>"select nazwa from klienci LIMIT 1")
        Question.create!(:id=>6, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "select nazwa from klienci LIMIT 1")
	Answer.create!(:id=>2, :student_id=>user.id, :question_id=>6, :answer=>"select nazwa from klienci LIMIT 1")
        get :index, valid_session
        assigns(:points).should eq(2)
      end
    end

describe 'GET index' do
      it 'student should got mark 5' do
        session[:tab]=[5,6]
        Test.create!(:id=>2, :name=>"Test2", :available=>1, :database=>1, :standard_score=>1,:number_of_questions=>2)	
        Question.create!(:id=>5, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "select nazwa from klienci LIMIT 1")
	Answer.create!(:id=>1, :student_id=>user.id, :question_id=>5, :answer=>"select nazwa from klienci LIMIT 1")
        Question.create!(:id=>6, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "select nazwa from klienci LIMIT 1")
	Answer.create!(:id=>2, :student_id=>user.id, :question_id=>6, :answer=>"select nazwa from klienci LIMIT 1")
        get :index, valid_session
        assigns(:mark).should eq(5)
      end
    end

describe 'GET index' do
      it 'student should got mark 3' do
        session[:tab]=[5,6]
        Test.create!(:id=>2, :name=>"Test2", :available=>1, :database=>1, :standard_score=>1,:number_of_questions=>2)	
        Question.create!(:id=>5, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "select nazwa from klienci LIMIT 1")
	Answer.create!(:id=>1, :student_id=>user.id, :question_id=>5, :answer=>"select nazwa from klienci LIMIT 1")
        Question.create!(:id=>6, :test_id =>2, :content => "Wypisz wszstkie ceny", :query => "select nazwa from klienci LIMIT 1")
	Answer.create!(:id=>2, :student_id=>user.id, :question_id=>6, :answer=>"select * from klienci LIMIT 1")
        get :index, valid_session
        assigns(:mark).should eq(3)
      end
    end

end
